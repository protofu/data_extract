import numpy as np

# ====================================
# 배열 생성
# ====================================

# 1차원 배열
a = np.array([1, 2, 3])
# 2차원 배열
b = np.array([[1, 2, 3], [4, 5, 6]])
# 3차원 배열
c = np.array([[[1, 2], [3, 4]], [[5, 6], [7, 8]]])

# 배열의 크기 확인
print(a.shape)  # (3,)
print(b.shape)  # (2, 3)
print(c.shape)  # (2, 2, 2)


# ====================================
# 배열 연산 (스칼라 연산)
# ====================================

a = np.array([1, 2, 3])
b = np.array([4, 5, 6])

# 원소별 덧셈
c = a + b   # [5 7 9]

# 원소별 곱셈
d = a * b   # [ 4 10 18]

# 스칼라와의 연산
e = a + 1   # [2 3 4]

## 메서드
a = np.array([1, 2, 3])

# 합계
b = np.sum(a)   # 6
# 평균
c = np.mean(a)  # 2.0
# 최소값
d = np.min(a)   # 1
# 최대값
e = np.max(a)   # 3


# ====================================
# 배열 인덱싱 / 슬라이싱
# ====================================

a = np.array([1, 2, 3, 4, 5])

# 인덱싱
b = a[0]  # 1
c = a[2]  # 3

# 슬라이싱
d = a[1:4]  # [2, 3, 4]
e = a[:3]   # [1, 2, 3]
f = a[3:]   # [4, 5]

a = np.array([[1, 2, 3], [4, 5, 6]])

# 인덱싱
b = a[0, 0]  # 1
c = a[1, 2]  # 6

# 슬라이싱
d = a[0, 1:3]  # [2, 3]
e = a[:, 1]    # [2, 5]
f = a[:, :2]   # [[1 2]
               #  [4 5]]


# ====================================
# 배열 인덱싱 / 슬라이싱
# ====================================

a = np.array([[1, 2], [3, 4], [5, 6]])
# [[1 2]
#  [3 4]
#  [5 6]]
# 배열의 형태 변경
b = a.reshape((2, 3))
# [[1 2 3]
#  [4 5 6]]
# 배열 전치
c = a.T
# [[1 3 5]
#  [2 4 6]]


# ====================================
# 배열 병합 분리
# ====================================

a = np.array([1, 2, 3])
b = np.array([4, 5, 6])

# 배열 병합
c = np.concatenate((a, b))  # [1, 2, 3, 4, 5, 6]

a = np.array([[1, 2], [3, 4]])
b = np.array([[5, 6]])

# 배열 병합
c = np.concatenate((a, b), axis=0)  # [[1, 2], [3, 4], [5, 6]]
# axis는 지정하지 않으면 기본값 0 // 기준이 되는 배열을 나타냄

a = np.array([1, 2, 3, 4, 5, 6])

# 배열 분리
b, c = np.split(a, [3])  # [1, 2, 3], [4, 5, 6]


a = np.array([[1, 2, 3], [4, 5, 6]])

# 다차원 배열 분리
b, c = np.split(a, [1], axis=0)  # [[1, 2, 3]], [[4, 5, 6]]
